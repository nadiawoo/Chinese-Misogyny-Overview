# -*- coding: utf-8 -*-
"""PinyinDemo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-Y7yJukMpwtH9aKtCc2N3wKBbW1bOZ7W

### What if we identified using pinyin homophones AND meanings
"""

import pandas as pd
import jieba
from pypinyin import lazy_pinyin
from difflib import SequenceMatcher

comments.head()

flag_terms = {
    "misogyny": ["女拳", "田园女权", "工具人", "婚驴", "世界公交车", "婊子", "爹味", "国男"],
    "political": ["红色", "毛主席", "资本主义", "公正", "打拳", "审判", "社会"]
}

#finding pinyin similarity
def is_pinyin_similar(word1, word2):
    p1 = lazy_pinyin(word1)
    p2 = lazy_pinyin(word2)
    return SequenceMatcher(None, ''.join(p1), ''.join(p2)).ratio() > 0.9

results = []
for _, row in comments.iterrows():
    text = row["comment_text"]
    tokens = list(jieba.cut(text))
    matched_terms = []

    for token in tokens:
        for category, terms in flag_terms.items():
            for term in terms:
                if token == term or is_pinyin_similar(token, term):
                    matched_terms.append((token, category, term))

    results.append({
        "original_text": text,
        "flagged_terms": [m[0] for m in matched_terms],
        "match_basis": [f"{m[0]} ~ {m[2]}" for m in matched_terms]
    })

# STEP 5: Output as DataFrame
flagged_df = pd.DataFrame(results)
flagged_df

flagged_df['flagged_terms'].tolist()